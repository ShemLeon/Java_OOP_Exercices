package Exercices_OOP.Mivhan.M_2021A.S5_AB;


public class test {
    public static void main(String[] args) {
        A a = new A();
        B b = new B();
        A ab = new B();
        a.f();  // A.f
        ab.f(); // B.f
        b.f();  // B.f
        a.g();  // A.f
        ab.g(); // B.g
        b.g();  // B.g
        ((B)(ab)).superG(); // B.f - главная подьебка с override.
        b.superG(); // B.f - главная подьебка с override.
        //   a.superG();  - Compilation error -нет доступа к методам наследников.

        //   ((B)a).superG();  ## Объяснение ошибки:
        //**1. Проблема приведения типа:**
        //- - это переменная типа `a``A`
        //- `(B)a` - попытка привести объект типа к типу `B` `A`
        //- Это **недопустимое приведение**, поскольку `B` является подклассом , а не наоборот `A`
        //
        //**2. Правила приведения типов в Java:**
        //- ✅ **Восходящее приведение (Upcasting)**: `B` → (подкласс к родительскому классу) - всегда безопасно `A`
        //- ❌ **Нисходящее приведение (Downcasting)**: → `B` (родительский класс к подклассу) - возможно только если объект реально является экземпляром `A`
        /*

a.superG();
((B)a).superG();

         */
    }
}
