package Exercices_OOP.Mivhan.M_2021A.S4_AB;

public class B extends A{
    public B(){
        System.out.println("B constructor");
    }
}

/*
А)
**1. Конструктор B вызовет пустой конструктор A** **ВЕРНО** ✓
Поскольку в конструкторе B нет явного вызова `super()`, Java автоматически вставляет `super()` в качестве первой строки. Класс A не имеет явно определенного конструктора, поэтому Java создает конструктор по умолчанию без параметров.
**2. Пустой конструктор Object не будет вызван, потому что у A нет явного вызова этого конструктора** **НЕВЕРНО** ✗
Конструктор Object будет вызван автоматически. Даже если в классе A нет явного вызова `super()`, Java автоматически вставляет этот вызов в конструктор по умолчанию класса A. Каждый класс в Java неявно наследуется от Object.
**3. Пустой конструктор Object будет вызван после печати строки "B constructor"** **НЕВЕРНО** ✗
Конструктор Object будет вызван ДО печати строки "B constructor". Конструкторы родительских классов всегда выполняются перед кодом дочернего конструктора.
**4. Пустой конструктор B вызовет пустой конструктор A, а затем будет напечатана строка** **ВЕРНО** ✓
 */
